"""Initial migration

Revision ID: 01a9d6bf4579
Revises: 36f04e187f12
Create Date: 2024-11-13 14:09:56.079492

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision: str = '01a9d6bf4579'
down_revision: Union[str, None] = '36f04e187f12'
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.alter_column('image_ratings', 'id',
               existing_type=sa.INTEGER(),
               type_=sa.UUID(),
               existing_nullable=False)
    op.alter_column('image_ratings', 'evaluator_id',
               existing_type=sa.INTEGER(),
               type_=sa.UUID(),
               existing_nullable=True)
    op.alter_column('image_ratings', 'image_id',
               existing_type=sa.INTEGER(),
               type_=sa.UUID(),
               existing_nullable=True)
    op.drop_constraint('image_ratings_image_id_fkey', 'image_ratings', type_='foreignkey')
    op.drop_constraint('image_ratings_evaluator_id_fkey', 'image_ratings', type_='foreignkey')
    op.create_foreign_key(None, 'image_ratings', 'images', ['image_id'], ['id'])
    op.create_foreign_key(None, 'image_ratings', 'users', ['evaluator_id'], ['id'])
    op.drop_column('image_ratings', 'created_at')
    op.alter_column('images', 'id',
               existing_type=sa.INTEGER(),
               type_=sa.UUID(),
               existing_nullable=False,
               existing_server_default=sa.text("nextval('images_id_seq'::regclass)"))
    op.alter_column('images', 'user_id',
               existing_type=sa.INTEGER(),
               type_=sa.UUID(),
               existing_nullable=True)
    op.create_index(op.f('ix_images_category'), 'images', ['category'], unique=False)
    op.create_index(op.f('ix_images_subcategory'), 'images', ['subcategory'], unique=False)
    op.drop_constraint('images_user_id_fkey', 'images', type_='foreignkey')
    op.create_foreign_key(None, 'images', 'users', ['user_id'], ['id'])
    op.drop_column('images', 'created_at')
    op.create_index(op.f('ix_tokens_token'), 'tokens', ['token'], unique=False)
    op.alter_column('users', 'id',
               existing_type=sa.INTEGER(),
               type_=sa.UUID(),
               existing_nullable=False,
               existing_server_default=sa.text("nextval('users_id_seq'::regclass)"))
    op.alter_column('users', 'name',
               existing_type=sa.VARCHAR(length=255),
               nullable=True)
    op.alter_column('users', 'document',
               existing_type=sa.VARCHAR(length=255),
               nullable=True)
    op.alter_column('users', 'email',
               existing_type=sa.VARCHAR(length=255),
               nullable=True)
    op.drop_constraint('users_document_key', 'users', type_='unique')
    op.drop_constraint('users_email_key', 'users', type_='unique')
    op.create_index(op.f('ix_users_document'), 'users', ['document'], unique=True)
    op.create_index(op.f('ix_users_email'), 'users', ['email'], unique=True)
    op.create_index(op.f('ix_users_name'), 'users', ['name'], unique=False)
    op.drop_column('users', 'created_at')
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.add_column('users', sa.Column('created_at', postgresql.TIMESTAMP(), server_default=sa.text('CURRENT_TIMESTAMP'), autoincrement=False, nullable=True))
    op.drop_index(op.f('ix_users_name'), table_name='users')
    op.drop_index(op.f('ix_users_email'), table_name='users')
    op.drop_index(op.f('ix_users_document'), table_name='users')
    op.create_unique_constraint('users_email_key', 'users', ['email'])
    op.create_unique_constraint('users_document_key', 'users', ['document'])
    op.alter_column('users', 'email',
               existing_type=sa.VARCHAR(length=255),
               nullable=False)
    op.alter_column('users', 'document',
               existing_type=sa.VARCHAR(length=255),
               nullable=False)
    op.alter_column('users', 'name',
               existing_type=sa.VARCHAR(length=255),
               nullable=False)
    op.alter_column('users', 'id',
               existing_type=sa.UUID(),
               type_=sa.INTEGER(),
               existing_nullable=False,
               existing_server_default=sa.text("nextval('users_id_seq'::regclass)"))
    op.drop_index(op.f('ix_tokens_token'), table_name='tokens')
    op.add_column('images', sa.Column('created_at', postgresql.TIMESTAMP(), server_default=sa.text('CURRENT_TIMESTAMP'), autoincrement=False, nullable=True))
    op.drop_constraint(None, 'images', type_='foreignkey')
    op.create_foreign_key('images_user_id_fkey', 'images', 'users', ['user_id'], ['id'], ondelete='CASCADE')
    op.drop_index(op.f('ix_images_subcategory'), table_name='images')
    op.drop_index(op.f('ix_images_category'), table_name='images')
    op.alter_column('images', 'user_id',
               existing_type=sa.UUID(),
               type_=sa.INTEGER(),
               existing_nullable=True)
    op.alter_column('images', 'id',
               existing_type=sa.UUID(),
               type_=sa.INTEGER(),
               existing_nullable=False,
               existing_server_default=sa.text("nextval('images_id_seq'::regclass)"))
    op.add_column('image_ratings', sa.Column('created_at', postgresql.TIMESTAMP(), server_default=sa.text('CURRENT_TIMESTAMP'), autoincrement=False, nullable=True))
    op.drop_constraint(None, 'image_ratings', type_='foreignkey')
    op.drop_constraint(None, 'image_ratings', type_='foreignkey')
    op.create_foreign_key('image_ratings_evaluator_id_fkey', 'image_ratings', 'users', ['evaluator_id'], ['id'], ondelete='CASCADE')
    op.create_foreign_key('image_ratings_image_id_fkey', 'image_ratings', 'images', ['image_id'], ['id'], ondelete='CASCADE')
    op.alter_column('image_ratings', 'image_id',
               existing_type=sa.UUID(),
               type_=sa.INTEGER(),
               existing_nullable=True)
    op.alter_column('image_ratings', 'evaluator_id',
               existing_type=sa.UUID(),
               type_=sa.INTEGER(),
               existing_nullable=True)
    op.alter_column('image_ratings', 'id',
               existing_type=sa.UUID(),
               type_=sa.INTEGER(),
               existing_nullable=False)
    # ### end Alembic commands ###
